package com.example.mobile_coursework_01;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.util.Random;

import es.dmoral.toasty.Toasty;

public class AdvancedLevel extends AppCompatActivity {

    Random random = new Random();
    int firstSetOfCar [] = {R.drawable.img_1,R.drawable.img_2,R.drawable.img_3,R.drawable.img_4,R.drawable.img_5,R.drawable.img_27,R.drawable.img_28,R.drawable.img_29,R.drawable.img_30,R.drawable.img_31,R.drawable.img_20,R.drawable.img_21};
    int secondSetOfCar [] = {R.drawable.img_6,R.drawable.img_7,R.drawable.img_8,R.drawable.img_9,R.drawable.img_10,R.drawable.img_11,R.drawable.img_12,R.drawable.img_13,R.drawable.img_25,R.drawable.img_26};
    int thirdSetOfCar [] = {R.drawable.img_14,R.drawable.img_15,R.drawable.img_16,R.drawable.img_17,R.drawable.img_18,R.drawable.img_19,R.drawable.img_22,R.drawable.img_23,R.drawable.img_24};
    ImageView randomImg01;
    ImageView randomImg02; //Three image views
    ImageView randomImg03;
    EditText inputTxtOne;
    EditText inputTxtTwo; // Three input text fields
    EditText inputTxtThree;
    TextView txtCorrectionOne;
    TextView txtCorrectionTwo; //Three text correction textViews,If answers are incorrect,this fields used to display correct answer
    TextView txtCorrectionThree;
    TextView counterView; //Display marks of users gain in the game
    Button submitBtn;
    int carOne;
    int carTwo; //store randomly generated numbers
    int carThree;
    int greenColorValue = Color.parseColor("#23cc1b");  //
    int redColorValue = Color.parseColor("#f01c05");    //colors
    int defHintColorValue = Color.parseColor("#808080");//
    int defTextColorValue = Color.parseColor("#000000");//
    int attempts = 0;
    int count; //store marks
    String carModelOne="";
    String carModelTwo=""; //store each car model generated by the array.
    String carModelThree="";
    TextView timerView;
    boolean switchedOn;
    CountDownTimer countdownTimer;
    String txt1 = "";
    String txt2 = "";
    String txt3 = "";
   // boolean bool = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_advanced_level);
        submitBtn = findViewById(R.id.submitBtn);
        Intent intent = getIntent();
        switchedOn = intent.getBooleanExtra("isChecked",false);
        randomImg01 = findViewById(R.id.imageView1);
        randomImg02 = findViewById(R.id.imageView2);
        randomImg03 = findViewById(R.id.imageView3);
        inputTxtOne = findViewById(R.id.txt_img1);
        inputTxtTwo = findViewById(R.id.txt_img2);
        inputTxtThree = findViewById(R.id.txt_img3);
        timerView = findViewById(R.id.timerView4);
        txtCorrectionOne = (TextView)findViewById(R.id.txt_correction1);
        txtCorrectionTwo = (TextView)findViewById(R.id.txt_correction2);
        txtCorrectionThree =(TextView) findViewById(R.id.txt_correction3);
        counterView = (TextView)findViewById(R.id.counter);
        carImgGenerate();
        timeFunction();


        if (savedInstanceState != null) {
            carOne = savedInstanceState.getInt("carOne");
            randomImg01.setImageResource(firstSetOfCar[carOne]);

            carTwo = savedInstanceState.getInt("carTwo");
            randomImg02.setImageResource(secondSetOfCar[carTwo]);

            carThree = savedInstanceState.getInt("carThree");
            randomImg03.setImageResource(thirdSetOfCar[carThree]);

            inputTxtOne.setTextColor(savedInstanceState.getInt("colorValue1"));
            inputTxtTwo.setTextColor(savedInstanceState.getInt("colorValue2"));
            inputTxtThree.setTextColor(savedInstanceState.getInt("colorValue3"));

            inputTxtOne.setHintTextColor(savedInstanceState.getInt("hintColorVal1"));
            inputTxtTwo.setHintTextColor(savedInstanceState.getInt("hintColorVal2"));
            inputTxtThree.setHintTextColor(savedInstanceState.getInt("hintColorVal3"));

            inputTxtOne.setText(savedInstanceState.getString("inputTxtOne"));
            inputTxtTwo.setText(savedInstanceState.getString("inputTxtTwo"));
            inputTxtThree.setText(savedInstanceState.getString("inputTxtThree"));

            inputTxtOne.setHint(savedInstanceState.getString("inputTxtOneHint"));
            inputTxtTwo.setHint(savedInstanceState.getString("inputTxtTwoHint"));
            inputTxtThree.setHint(savedInstanceState.getString("inputTxtThreeHint"));

            txtCorrectionOne.setText(savedInstanceState.getString("txtCorrectionOne"));
            txtCorrectionTwo.setText(savedInstanceState.getString("txtCorrectionTwo"));
            txtCorrectionThree.setText(savedInstanceState.getString("txtCorrectionThree"));

            submitBtn.setText(savedInstanceState.getString("submitBtn"));
            counterView.setText(savedInstanceState.getString("counterView"));
            attempts = savedInstanceState.getInt("attempts");
            count = savedInstanceState.getInt("count");

            txt1 = savedInstanceState.getString("txt1");
            txt2 = savedInstanceState.getString("txt2");
            txt3 = savedInstanceState.getString("txt3");

            inputTxtOne.setEnabled(savedInstanceState.getBoolean("bool1"));
            inputTxtTwo.setEnabled(savedInstanceState.getBoolean("bool2"));
            inputTxtThree.setEnabled(savedInstanceState.getBoolean("bool3"));
        }
    }

    public void timeFunction(){

        if(switchedOn){
            countdownTimer = new CountDownTimer(20000, 1000) {
                @Override
                public void onTick(long millisUntilFinished) {
                    timerView.setText(""+millisUntilFinished / 1000);
                }

                @Override
                public void onFinish() {
                    attempts = 4;
                    checkingTxt();
                    submitBtn.setText("Next");
                }
            }.start();

        }
    }

    private void carImgGenerate()
    {
        carOne = random.nextInt(12);
        carTwo = random.nextInt(10);
        carThree = random.nextInt(8);

        System.out.println(carOne+" "+carTwo+" "+carThree);

        randomImg01.setImageResource(firstSetOfCar[carOne]);
        randomImg02.setImageResource(secondSetOfCar[carTwo]);
        randomImg03.setImageResource(thirdSetOfCar[carThree]);
    }

    public void submitBtn(View view) {
        if (!(txt1.equals("Correct ! ")) || !(txt2.equals("Correct ! ")) || !(txt3.equals("Correct ! "))){
            attempts++;
        }
        checkingTxt();
    }

    private void checkingTxt() {
        if (submitBtn.getText().equals("Submit")) {
            if ((carOne >= 0 && carOne <= 4) && !(txt1.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtOne.getText().toString().equalsIgnoreCase("Audi")) {
                    inputTxtOne.setText("Audi");
                    txt1 = "Correct ! ";
                    inputTxtOne.setTextColor(greenColorValue);
                    inputTxtOne.setEnabled(false);
                    count++;
                } else if (!(inputTxtOne.getText().toString().equalsIgnoreCase("Audi"))) {
                    inputTxtOne.setHint("Wrong!");
                    inputTxtOne.setHintTextColor(redColorValue);
                    inputTxtOne.setText("");
                    carModelOne = "Audi";

                }
            }
            if ((carOne >= 5 && carOne <= 9) && !(txt1.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtOne.getText().toString().equalsIgnoreCase("Toyota")) {
                    inputTxtOne.setText("Toyota");
                    txt1 = "Correct ! ";
                    inputTxtOne.setTextColor(greenColorValue);
                    inputTxtOne.setEnabled(false);
                    count++;
                } else if (!(inputTxtOne.getText().toString().equalsIgnoreCase("Toyota"))) {
                    inputTxtOne.setHint("Wrong!");
                    inputTxtOne.setHintTextColor(redColorValue);
                    inputTxtOne.setText("");
                    carModelOne = "Toyota";

                }
            }
            if ((carOne >= 10 && carOne <= 11) && !(txt1.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtOne.getText().toString().equalsIgnoreCase("Peugeot")) {
                    inputTxtOne.setText("Peugeot");
                    txt1 = "Correct ! ";
                    inputTxtOne.setTextColor(greenColorValue);
                    inputTxtOne.setEnabled(false);
                    count++;
                } else if (!(inputTxtOne.getText().toString().equalsIgnoreCase("Peugeot"))) {
                    inputTxtOne.setHint("Wrong!");
                    inputTxtOne.setHintTextColor(redColorValue);
                    inputTxtOne.setText("");
                    carModelOne = "Peugeot";

                }
            }
            if ((carTwo >= 0 && carTwo <= 2) && !(txt2.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtTwo.getText().toString().equalsIgnoreCase("BMW")) {
                    inputTxtTwo.setText("BMW");
                    txt2 = "Correct ! ";
                    inputTxtTwo.setTextColor(greenColorValue);
                    inputTxtTwo.setEnabled(false);
                    count++;
                } else if (!(inputTxtTwo.getText().toString().equalsIgnoreCase("BMW"))) {
                    inputTxtTwo.setHint("Wrong!");
                    inputTxtTwo.setHintTextColor(redColorValue);
                    inputTxtTwo.setText("");
                    carModelTwo = "BMW";

                }
            }
            if ((carTwo >= 3 && carTwo <= 7)&& !(txt2.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtTwo.getText().toString().equalsIgnoreCase("Honda")) {
                    inputTxtTwo.setText("Honda");
                    txt2 = "Correct ! ";
                    inputTxtTwo.setTextColor(greenColorValue);
                    inputTxtTwo.setEnabled(false);
                    count++;
                } else if (!(inputTxtTwo.getText().toString().equalsIgnoreCase("Honda"))) {
                    inputTxtTwo.setHint("Wrong!");
                    inputTxtTwo.setHintTextColor(redColorValue);
                    inputTxtTwo.setText("");
                    carModelTwo = "Honda";

                }
            }
            if ((carTwo >= 8 && carTwo <= 9)&& !(txt2.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtTwo.getText().toString().equalsIgnoreCase("Tesla")) {
                    inputTxtTwo.setText("Tesla");
                    txt2 = "Correct ! ";
                    inputTxtTwo.setTextColor(greenColorValue);
                    inputTxtTwo.setEnabled(false);
                    count++;
                } else if (!(inputTxtTwo.getText().toString().equalsIgnoreCase("Tesla"))) {
                    inputTxtTwo.setHint("Wrong!");
                    inputTxtTwo.setHintTextColor(redColorValue);
                    inputTxtTwo.setText("");
                    carModelTwo = "Tesla";

                }
            }
            if ((carThree >= 0 && carThree <= 2) && !(txt3.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtThree.getText().toString().equalsIgnoreCase("Mercedes")) {
                    inputTxtThree.setText("Mercedes");
                    txt3 = "Correct ! ";
                    inputTxtThree.setTextColor(greenColorValue);
                    inputTxtThree.setEnabled(false);
                    count++;
                } else if (!(inputTxtThree.getText().toString().equalsIgnoreCase("Mercedes"))) {
                    inputTxtThree.setHint("Wrong!");
                    inputTxtThree.setHintTextColor(redColorValue);
                    inputTxtThree.setText("");
                    carModelThree = "Mercedes";

                }
            }
            if ((carThree >= 3 && carThree <= 5) && !(txt3.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtThree.getText().toString().equalsIgnoreCase("Nissan")) {
                    inputTxtThree.setText("Nissan");
                    txt3 = "Correct ! ";
                    inputTxtThree.setTextColor(greenColorValue);
                    inputTxtThree.setEnabled(false);
                    count++;
                } else if (!(inputTxtThree.getText().toString().equalsIgnoreCase("Nissan"))) {
                    inputTxtThree.setHint("Wrong!");
                    inputTxtThree.setHintTextColor(redColorValue);
                    inputTxtThree.setText("");
                    carModelThree = "Nissan";

                }
            }
            if ((carThree >= 6 && carThree <= 8) && !(txt3.equalsIgnoreCase("Correct ! "))) {
                if (inputTxtThree.getText().toString().equalsIgnoreCase("Suzuki")) {
                    inputTxtThree.setText("Suzuki");
                    txt3 = "Correct ! ";
                    inputTxtThree.setTextColor(greenColorValue);
                    inputTxtThree.setEnabled(false);
                    count++;
                } else if (!(inputTxtThree.getText().toString().equalsIgnoreCase("Suzuki"))) {
                    inputTxtThree.setHint("Wrong!");
                    inputTxtThree.setHintTextColor(redColorValue);
                    inputTxtThree.setText("");
                    carModelThree = "Suzuki";

                }
            }
            counterView.setText(String.valueOf(count));//set marks

            if (attempts > 3){
                if (!(txt1.equals("Correct ! "))){
                    txtCorrectionOne.setText(carModelOne);
                }
                if(!(txt2.equals("Correct ! "))){
                    txtCorrectionTwo.setText(carModelTwo);
                }
                if (!(txt3.equals("Correct ! "))){
                    txtCorrectionThree.setText(carModelThree);
                }
                attempts = 0;
                inputTxtOne.setEnabled(false);
                inputTxtTwo.setEnabled(false);
                inputTxtThree.setEnabled(false);
                submitBtn.setText("Next");
                Toasty.error(this, "No attempts left ! ", Toast.LENGTH_LONG).show();

            }if((txt1.equals("Correct ! ") && txt2.equals("Correct ! ") && txt3.equals("Correct ! "))){
                attempts = 0;
                if(countdownTimer != null) {
                    countdownTimer.cancel();
                    countdownTimer = null;
                }
                submitBtn.setText("Next");
                Toasty.success(this, "CORRECT!", Toast.LENGTH_LONG).show();
            }
        }
        else if(submitBtn.getText().equals("Next")){
            txt1 ="";
            txt2 ="";
            txt3 ="";
            submitBtn.setText("Submit");
            carImgGenerate();
            if (switchedOn){
                timeFunction();
            }
            inputTxtOne.setText("");
            inputTxtOne.setTextColor(defTextColorValue);
            inputTxtOne.setEnabled(true);
            inputTxtOne.setHint("Car Make img 01");
            inputTxtOne.setHintTextColor(defHintColorValue);

            inputTxtTwo.setText("");
            inputTxtTwo.setTextColor(defTextColorValue);
            inputTxtTwo.setEnabled(true);
            inputTxtTwo.setHint("Car Make img 02");
            inputTxtTwo.setHintTextColor(defHintColorValue);

            inputTxtThree.setText("");
            inputTxtThree.setTextColor(defTextColorValue);
            inputTxtThree.setEnabled(true);
            inputTxtThree.setHint("Car Make img 03");
            inputTxtThree.setHintTextColor(defHintColorValue);

            txtCorrectionOne.setText("");
            txtCorrectionTwo.setText("");
            txtCorrectionThree.setText("");
        }
    }
    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        outState.putInt("carOne",carOne);
        outState.putInt("carTwo",carTwo);
        outState.putInt("carThree",carThree);

        outState.putString("inputTxtOne",inputTxtOne.getText().toString());
        outState.putString("inputTxtTwo",inputTxtTwo.getText().toString());
        outState.putString("inputTxtThree",inputTxtThree.getText().toString());

        outState.putString("inputTxtOneHint",inputTxtOne.getHint().toString());//
        outState.putString("inputTxtTwoHint",inputTxtTwo.getHint().toString());//
        outState.putString("inputTxtThreeHint",inputTxtThree.getHint().toString());//

        outState.putString("txtCorrectionOne",txtCorrectionOne.getText().toString());
        outState.putString("txtCorrectionTwo",txtCorrectionTwo.getText().toString());
        outState.putString("txtCorrectionThree",txtCorrectionThree.getText().toString());

        outState.putInt("attempts",attempts);
        outState.putString("counterView",counterView.getText().toString());
        outState.putInt("count",count);

        outState.putString("txt1",txt1);
        outState.putString("txt2",txt2);
        outState.putString("txt3",txt3);
        outState.putString("submitBtn",submitBtn.getText().toString());

        outState.putInt("colorValue1",inputTxtOne.getCurrentTextColor());
        outState.putInt("colorValue2",inputTxtTwo.getCurrentTextColor());
        outState.putInt("colorValue3",inputTxtThree.getCurrentTextColor());

        outState.putInt("hintColorVal1",inputTxtOne.getCurrentHintTextColor());
        outState.putInt("hintColorVal2",inputTxtOne.getCurrentHintTextColor());
        outState.putInt("hintColorVal3",inputTxtOne.getCurrentHintTextColor());

        outState.putBoolean("bool1",inputTxtOne.isEnabled());
        outState.putBoolean("bool2",inputTxtTwo.isEnabled());
        outState.putBoolean("bool3",inputTxtThree.isEnabled());
    }
}
